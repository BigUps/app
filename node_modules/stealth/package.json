{
  "name": "stealth",
  "version": "0.2.0",
  "description": "Stealth addresses for Bitcoin and other crypto currencies.",
  "main": "lib/stealth.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "coverage": "istanbul cover ./node_modules/.bin/_mocha -- --reporter list test/*.js",
    "coveralls": "npm run coverage && coveralls < coverage/lcov.info",
    "test": "standard && mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/cryptocoinjs/stealth"
  },
  "keywords": [
    "bitcoin",
    "steatlth",
    "addresses",
    "privacy"
  ],
  "author": {
    "name": "JP Richardson"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/cryptocoinjs/stealth/issues"
  },
  "homepage": "https://github.com/cryptocoinjs/stealth",
  "dependencies": {
    "bs58": "^2.0.1",
    "ecurve": "^1.0.1"
  },
  "devDependencies": {
    "coveralls": "^2.11.2",
    "istanbul": "^0.3.5",
    "mocha": "^2.1.0",
    "standard": "^2.10.0"
  },
  "readme": "stealth\n=======\n\n[![build status](https://secure.travis-ci.org/cryptocoinjs/stealth.svg)](http://travis-ci.org/cryptocoinjs/stealth)\n[![Coverage Status](https://img.shields.io/coveralls/cryptocoinjs/stealth.svg)](https://coveralls.io/r/cryptocoinjs/stealth)\n\n[![js-standard-style](https://raw.githubusercontent.com/feross/standard/master/badge.png)](https://github.com/feross/standard)\n\nThis module is used for stealth addresses for Bitcoin and other crypto currencies.\n\n\nUsage\n-----\n\nFirst, you should really read this excellent resource: https://gist.github.com/ryanxcharles/1c0f95d0892b4a92d70a\n\nThis module depends upon [ecurve](https://github.com/cryptocoinjs/ecurve) and may change to\n[elliptic](https://github.com/indutny/elliptic) in the future. However, this is just an implementation detail\nthat shouldn't affect your code.\n\n### Example\n\n#### If you're the payer (sender)\n\n```js\nvar Stealth = require('stealth')\n\n// you get this from the person you're going to pay (receiver)\nvar addr = 'vJmtuUb8ysKiM1HtHQF23FGfjGAKu5sM94UyyjknqhJHNdj5CZzwtpGzeyaATQ2HvuzomNVtiwsTJSWzzCBgCTtUZbRFpzKVq9MAUr'\nvar stealth = Stealth.fromString(addr)\n\n// single-use nonce key pair, works with CoinKey, bitcoinjs-lib, bitcore, etc\nvar keypair = require('coinkey').createRandom()\n\n// generate payment address\nvar payToAddress = stealth.genPaymentAddress(keypair.privateKey)\n\n// create transaction with two outputs:\n// 1. Regular pay-to-pubkeyhash with `payToAddress` as recipient\n// 2. OP_RETURN with `keypair.publicKey`\n```\n\n\n#### If you're the payee (recipient)\n\n```js\nvar Stealth = require('stealth')\n\n// you need to scan every transaction and look for the following:\n// 1. does the transaction contain an OP_RETURN?\n// 2. if yes, then extract the OP_RETURN\n// 3. is the OP_RETURN data a compressed public key (33 bytes)?\n// 4. if yes, check if mine\n\n// generate two key pairs, can use CoinKey, bitcoinjs-lib, bitcore, etc\nvar payloadKeyPair = require('coinkey').createRandom()\nvar scanKeyPair = require('coinkey').createRandom()\n\n// note, the private keys are NOT encoded in the Stealth address\n// you need to save them somewhere\nvar stealth = new Stealth({\n  payloadPrivKey: payloadKeyPair.privateKey,\n  payloadPubKey: payloadKeyPair.publicKey,\n  scanPrivKey: scanKeyPair.privateKey,\n  scanPubKey: scanKeyPair.publicKey\n})\n\nvar addr = stealth.toString()\n// => 'vJmtuUb8ysKiM1HtHQF23FGfjGAKu5sM94UyyjknqhJHNdj5CZzwtpGzeyaATQ2HvuzomNVtiwsTJSWzzCBgCTtUZbRFpzKVq9MAUr'\n\n// publish addr or give it someone\n// unlike regular Bitcoin addresses, you can use\n// stealth address as much as you like\n\n// scan and decode transactions\n\nvar opReturnPubKey = /* */\nvar pubKeyHashWithPayment = /* */\n\nvar keypair = stealth.checkPaymentPubKeyHash(opReturnPubKey, pubKeyHashWithPayment)\n\n// it NOT YOURS, `keypair` will be falsey\n\nif (keypair == null) {\n  console.log('payment is not mine')\n} else {\n  console.log('payment is mine')\n\n  // redeem with `privKey`\n  console.log(keypair.privKey)\n}\n```\n\n\nResources\n---------\n\n### Credits\n\nThe creation of this module owes a lot of credit to the prior work of [Ryan X. Charles](https://github.com/ryanxcharles), specifically the following\nresources:\n\n- https://github.com/ryanxcharles/fullnode\n- https://gist.github.com/ryanxcharles/1c0f95d0892b4a92d70a\n\n\n### Additional Resources\n\n- Dark Wallet description: https://wiki.unsystem.net/en/index.php/DarkWallet/Stealth\n- Dark Wallet infographic: https://wiki.unsystem.net/en/images/e/e5/RHhNKL6.jpg\n- Stealth Whitepaper: http://sourceforge.net/p/bitcoin/mailman/message/31813471/\n\n\nLicense\n-------\n\nMIT\n",
  "readmeFilename": "README.md",
  "gitHead": "ef1fa688d3bbb885defc6969878a077381643987",
  "_id": "stealth@0.2.0",
  "_shasum": "5f83b07ae07cdcc9295b14810b596b725b66ffd3",
  "_from": "stealth@latest"
}
