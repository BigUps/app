{
  "name": "electron-window",
  "version": "0.2.1",
  "description": "Convenience methods for Electron windows.",
  "main": "./lib/index.js",
  "scripts": {
    "test": "standard"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jprichardson/electron-window"
  },
  "keywords": [
    "window",
    "atom",
    "atom-shell",
    "electron",
    "gui",
    "electron-component"
  ],
  "author": {
    "name": "JP Richardson"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/jprichardson/electron-window/issues"
  },
  "homepage": "https://github.com/jprichardson/electron-window",
  "devDependencies": {
    "standard": "^3.11.0"
  },
  "readme": "electron-window\n===============\n\nConvenience methods for Electron windows.\n\n\nInstallation\n------------\n\n    npm i --save electron-window\n\n\nUsage\n-----\n\n### API Methods\n\n#### createWindow(options)\n\nClass method that creates a new [BrowserWindow](https://github.com/atom/electron/blob/master/docs/api/browser-window.md) with\nthe following default `options`: `{show: false, resizable: false, frame: true}`. No need to worry about keeping a global reference\nto prevent garbage collection, this is handled for you.\n\n\n### parseArgs()\n\nInstance method to parse arguments in window. You would only need to call from your renderer preload script if you pass in\n[`preload`](https://github.com/atom/electron/blob/master/docs/api/browser-window.md#new-browserwindowoptions).\n\n\n#### showUrl(httpOrFileUrl, [argsForRenderer], callback)\n\nInstance method that shows the url. When the url is finished loading, the callback is returned. If the optional `argsForRenderer` is set\nthen `__args__` will be a global object for the page in the renderer process. This is a convenient way to pass\narguments from the main process to the renderer process.\n\n\n#### unref()\n\nInstance method to call if you ever want to remove the global reference. Should only need to be called if\n`[destroy()](https://github.com/atom/electron/blob/master/docs/api/browser-window.md#browserwindowdestroy)` is ever called.\nMost likely, you won't need to use this.\n\n\n### API Properties\n\n#### windows\n\nClass property to get a reference to all windows created and their ids.\n\n\n\n### Example\n\n**main process**\n\n```js\nvar window = require('electron-window')\n\nvar windowOptions = {\n width: 1000,\n height: 400\n}\nvar mainWindow = window.createWindow(windowOptions)\n\n// can access at window.__args__ from scripts\n// ran from index.html\nvar args = {\n  data: 'some secret data'\n}\nmainWindow.showUrl('index.html', args, function() {\n  console.log('the window should be showing with the contents of the URL now')\n})\n```\n\n**renderer process**\n\n```js\n// only call if `preload` is set in `windowOptions`\nrequire('electron-window').parseArgs()\n\nconsole.log(window.__args__)\n// => Object {data: \"some secret data\"}\n```\n\n\nLicense\n-------\n\nMIT\n\n\n",
  "readmeFilename": "README.md",
  "gitHead": "5dafe7feff26de7e5725a71919146cdb12a80220",
  "_id": "electron-window@0.2.1",
  "_shasum": "ea83932fcac3b8e276c9f2984dd6df3f64c3987c",
  "_from": "electron-window@latest"
}
